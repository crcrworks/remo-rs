/*
 * Nature API
 *
 * Read/Write Nature Remo
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserResponse {
    #[serde(rename = "country", skip_serializing_if = "Option::is_none")]
    pub country: Option<String>,
    #[serde(rename = "distance_unit", skip_serializing_if = "Option::is_none")]
    pub distance_unit: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "nickname", skip_serializing_if = "Option::is_none")]
    pub nickname: Option<String>,
    #[serde(rename = "temp_unit", skip_serializing_if = "Option::is_none")]
    pub temp_unit: Option<String>,
    #[serde(rename = "updated_privacy_policy", skip_serializing_if = "Option::is_none")]
    pub updated_privacy_policy: Option<Box<models::UserResponseUpdatedPrivacyPolicy>>,
}

impl UserResponse {
    pub fn new() -> UserResponse {
        UserResponse {
            country: None,
            distance_unit: None,
            id: None,
            nickname: None,
            temp_unit: None,
            updated_privacy_policy: None,
        }
    }
}

